prendre chaque nombre separe d'espace jusqu'a max_x
utilise un atoi sur chaque et stocker dans un int* (surment dans la struct)
faire les calculs de modification
put pixel avec le point de depart et le decal diago
utilise la tech octant et la methode brehsenam


Le cacul de Y en nb line est bon mais x prend le nb de char donc a revoir pour toute ses utilisation et malloc


read_map()
	
gcc main.c ../libft/libft.a ../get_next_line/get_next_line.c parsing.c -framework OpenGL -framework Appkit && ./a.out ../maps/test_maps/basictest.fdf

gcc main.c -lmlx ../libft/libft.a ../get_next_line/get_next_line.c parsing.c display.c draw_map.c -framework OpenGL -framework Appkit && ./a.out ../maps/test_maps/42.fdf














void line(int x0, int y0, int x1, int y1) {
 
  int dx = abs(x1-x0), sx = x0<x1 ? 1 : -1;
  int dy = abs(y1-y0), sy = y0<y1 ? 1 : -1; 
  int err = (dx>dy ? dx : -dy)/2, e2;
 
  for(;;){
    setPixel(x0,y0);
    if (x0==x1 && y0==y1) break;
    e2 = err;
    if (e2 >-dx) { err -= dy; x0 += sx; }
    if (e2 < dy) { err += dx; y0 += sy; }
  }
}